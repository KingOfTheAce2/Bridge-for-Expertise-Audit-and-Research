name: Windows Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to build (e.g., v0.0.1)'
        required: false
        default: 'manual-build'

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  test:
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './src-tauri -> target'

      - name: Install dependencies
        run: npm ci

      - name: Run Rust tests
        working-directory: src-tauri
        run: cargo test

      - name: Check Rust code
        working-directory: src-tauri
        run: cargo check

      - name: Run Rust clippy
        working-directory: src-tauri
        run: cargo clippy -- -D warnings || true

  build-windows:
    needs: test
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './src-tauri -> target'

      - name: Install frontend dependencies
        run: npm ci

      - name: Install WebView2
        run: |
          Invoke-WebRequest -Uri https://go.microsoft.com/fwlink/p/?LinkId=2124703 -OutFile webview2.exe
          Start-Process -FilePath webview2.exe -ArgumentList '/silent', '/install' -Wait
          Remove-Item webview2.exe
        shell: powershell

      - name: Build frontend
        run: npm run build

      - name: Build Tauri app
        env:
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
          TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
        run: npm run tauri:build

      - name: Get version
        id: version
        shell: bash
        run: |
          if [ "${{ github.event_name }}" = "push" ]; then
            echo "version=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
          else
            echo "version=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
          fi

      - name: Compress artifacts
        shell: powershell
        run: |
          $sourcePath = "src-tauri/target/release/bundle"
          $destPath = "bear-llm-ai-windows-${{ steps.version.outputs.version }}.zip"

          if (Test-Path $sourcePath) {
            Compress-Archive -Path "$sourcePath/*" -DestinationPath $destPath
            Write-Host "Compressed to $destPath"
          } else {
            Write-Host "Source path not found: $sourcePath"
            Get-ChildItem src-tauri/target/release -Recurse
          }

      - name: Upload Windows artifacts
        uses: actions/upload-artifact@v4
        with:
          name: bear-llm-ai-windows-${{ steps.version.outputs.version }}
          path: |
            src-tauri/target/release/bundle/msi/*.msi
            src-tauri/target/release/bundle/nsis/*.exe
            src-tauri/target/release/*.exe
          if-no-files-found: warn

      - name: Create Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: |
            src-tauri/target/release/bundle/msi/*.msi
            src-tauri/target/release/bundle/nsis/*.exe
          draft: true
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
